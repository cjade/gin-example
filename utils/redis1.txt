package utils

import (
	"fmt"
	"gin-example/conf"
	"github.com/gomodule/redigo/redis"
	"log"
)

type RedisUtil struct {
	client redis.Conn
}

// RedisClient 全局变量, 外部使用utils.RedisClient来访问
var RedisClient RedisUtil

func init() {
	address := fmt.Sprintf("%s:%d", conf.Cfg.Redis.Host, conf.Cfg.Redis.Port)
	conn, err := redis.Dial("tcp", address,
		redis.DialDatabase(conf.Cfg.Redis.DB),
		redis.DialUsername(conf.Cfg.Redis.Username),
		redis.DialPassword(conf.Cfg.Redis.Password),
	)
	if err != nil {
		log.Fatalln(err)
	}

	RedisClient = RedisUtil{
		client: conn,
	}

	//defer conn.Close()

}

//
//type RedisErr struct {
//	message string
//}
//
//// 方法名字是Error()
//func (e RedisErr) Error() string {
//	return fmt.Sprintf("%v ", e.message)
//}

// SetStr 设置string
func (db *RedisUtil) SetStr(key string, value string) error {
	_, err := db.client.Do("set", key, value)
	return err
}

// GetStr 获取string
func (db *RedisUtil) GetStr(key string) (string, error) {
	value, err := db.client.Do("get", key)
	return string(value.([]byte)), err
}

// SetExpire 设置key过期时间
func (db *RedisUtil) SetExpire(key string, expireSecond int) error {
	_, err := db.client.Do("EXPIRE", key, expireSecond)
	return err
}
